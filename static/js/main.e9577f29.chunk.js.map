{"version":3,"sources":["components/InfoPopUp.js","components/Heading.js","components/AlgorithmButton.js","components/AlgorithmPanel.js","components/SpeedPanel.js","components/SortButton.js","components/InfoButton.js","components/SortingVisualiser.js","logic/generateArray.js","logic/insertionSort.js","logic/bubbleSort.js","logic/selectionSort.js","components/App.js","logic/runAnimations.js","logic/clearAnimations.js","index.js"],"names":["InfoPopUp","props","handleClosePopUpButton","bind","this","onClosePopUpButtonClick","className","infoPopUpHidden","selectedAlgorithm","join","trim","href","target","name","onClick","alt","React","Component","Heading","AlgorithmButton","handleAlgorithmButton","onAlgorithmButtonClick","disabled","animationsRunning","AlgorithmPanel","document","body","algorithm","SpeedPanel","handleRangeChange","e","onRangeChange","value","type","min","max","animationsSpeed","onChange","SortButton","handleSortButton","onSortButtonClick","sortButtonText","InfoButton","handleInfoButton","onInfoButtonClick","SortingVisualiser","array","map","height","index","key","style","generateArray","ARRAY_BAR_MIN_HEIGHT","window","screen","ARRAY_BAR_MAX_HEIGHT","arrayBars","querySelectorAll","length","i","backgroundColor","unsortedArray","push","randomIntFromInterval","Math","floor","random","getInsertionSortAnimations","animationsArray","j","swap","animate","insertionSort","hold","getBubbleSortAnimations","isSorted","counter","bubbleSort","getSelectionSortAnimations","currentIndex","smallestIndex","animateHighlight","animateSwap","selectionSort","App","state","onload","classList","remove","setState","rangeValue","transitionSpeed","shouldColourSwap","animations","barHeights","barOneIndex","barTwoIndex","barOneStyle","barTwoStyle","colour","setTimeout","transitionDuration","barOneHeight","barTwoHeight","heightOneText","heightTwoText","textContent","runAnimations","arrayLength","timeoutIDs","clearTimeout","clearAnimations","classNameSidebar","classNameVisualiser","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e9577f29.chunk.js","sourcesContent":["import React from 'react';\nimport './InfoPopUp.css';\n\nexport default class InfoPopUp extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleClosePopUpButton = this.handleClosePopUpButton.bind(this);\n  }\n\n  handleClosePopUpButton() {\n    this.props.onClosePopUpButtonClick();\n  }\n\n  render() {\n    const className = [\n      'component-info-pop-up',\n      this.props.infoPopUpHidden ? 'hidden' : '',\n      this.props.selectedAlgorithm,\n    ]\n\n    return (\n      <section className={className.join(' ').trim()}>\n        <p className=\"info-heading-top\">What is a sorting algorithm?</p>\n        <p>A list of instructions that arranges a set of values in a given order. On this site I{'\\''}ve implemented three simple algorithms that sort in ascending order.</p>\n        <p className=\"info-heading\">What is the performance of these algorithms?</p>\n        <p>Using Big-O notation each of these algorithms have an average time-complexity of O(n<sup>2</sup>).</p>\n        <p className=\"info-heading\">Who are you?</p>\n        <p>My name is Samuel Surgeon and I{'\\''}m a developer from Sydney. Say hi to me <a href=\"http://samuelsurgeon.com/\" target=\"_blank\">here</a>!</p>\n        <button\n          name=\"closePopUpButton\"\n          className=\"close-pop-up-button\"\n          onClick={this.handleClosePopUpButton}\n          alt=\"Close Pop-up Button\">\n          ✕\n        </button>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport './Heading.css';\n\nexport default class Heading extends React.Component {\n  render() {\n    return (\n      <section className=\"component-heading\">\n        <section className=\"title\">\n          Sorting Algorithm Visualiser\n        </section>\n        <section className=\"subtitle\">\n          <br></br>Click <a href=\"https://github.com/samuelsurgeon/sorting-visualiser\" target=\"_blank\">here</a> to see the code\n        </section>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport './AlgorithmButton.css';\n\nexport default class AlgorithmButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAlgorithmButton = this.handleAlgorithmButton.bind(this);\n  }\n\n  handleAlgorithmButton() {\n    this.props.onAlgorithmButtonClick(this.props.name);\n  }\n\n  render() {\n    const className = [\n      'type-button',\n      this.props.selectedAlgorithm,\n      this.props.selectedAlgorithm === this.props.name ? 'selected' : '',\n    ]\n\n    return (\n      <button\n        className={className.join(' ').trim()}\n        onClick={this.handleAlgorithmButton}\n        disabled={this.props.animationsRunning}>\n        {this.props.name}\n      </button>\n    );\n  }\n}\n","import React from 'react';\nimport AlgorithmButton from './AlgorithmButton';\n\nexport default class AlgorithmPanel extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.handleAlgorithmButton = this.handleAlgorithmButton.bind(this);\n  }\n\n  componentDidUpdate() {\n    document.body.className = this.props.selectedAlgorithm;\n  }\n  \n  handleAlgorithmButton(algorithm) {\n    this.props.onAlgorithmButtonClick(algorithm);\n  }\n\n  render() {\n    return (\n      <section className=\"component-algorithm-panel\">\n        Sort type\n        <section className=\"buttons-container\">\n          <AlgorithmButton\n            name=\"insertion\"\n            selectedAlgorithm={this.props.selectedAlgorithm}\n            animationsRunning={this.props.animationsRunning}\n            onAlgorithmButtonClick={this.handleAlgorithmButton} />\n          <AlgorithmButton \n            name=\"bubble\"\n            selectedAlgorithm={this.props.selectedAlgorithm}\n            animationsRunning={this.props.animationsRunning}\n            onAlgorithmButtonClick={this.handleAlgorithmButton} />\n          <AlgorithmButton\n            name=\"selection\"\n            selectedAlgorithm={this.props.selectedAlgorithm}\n            animationsRunning={this.props.animationsRunning}\n            onAlgorithmButtonClick={this.handleAlgorithmButton} />\n        </section>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport './SpeedPanel.css';\n\nexport default class SpeedPanel extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRangeChange = this.handleRangeChange.bind(this);\n  }\n\n  handleRangeChange(e) {\n    this.props.onRangeChange(e.target.value);\n  }\n\n  render() {\n    const className = ['slider', this.props.selectedAlgorithm];\n\n    return (\n      <section className=\"component-speed-panel\">\n        Speed\n        <input \n          className={className.join(' ').trim()}\n          type=\"range\"\n          min=\"150\" max=\"350\" \n          value={this.props.animationsSpeed}\n          disabled={this.props.animationsRunning}\n          onChange={this.handleRangeChange} />\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport './SortButton.css';\n\nexport default class SortButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSortButton = this.handleSortButton.bind(this);\n  }\n\n  handleSortButton() {\n    this.props.onSortButtonClick();\n  }\n\n  render() {\n    const className = ['sort-button', this.props.selectedAlgorithm];\n    const sortButtonText = this.props.animationsRunning ? 'Reset' : 'Sort';\n\n    return (\n      <section className=\"component-sort-button\">\n        <button \n          name=\"sortButton\"\n          className={className.join(' ').trim()}\n          onClick={this.handleSortButton}>\n          {sortButtonText}\n        </button>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport './InfoButton.css';\n\nexport default class InfoButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInfoButton = this.handleInfoButton.bind(this);\n  }\n    \n  handleInfoButton() {\n    this.props.onInfoButtonClick();\n  }\n\n  render() {\n    const infoPopUpHidden = this.props.infoPopUpHidden;\n\n    return (\n      <section className=\"component-info-button\">\n        <section className=\"button-container\">\n          <button\n            name=\"infoButton\"\n            className=\"info-button\"\n            onClick={this.handleInfoButton} \n            alt=\"Information Button\"\n            disabled={this.props.animationsRunning}>\n            ?\n          </button>\n        </section>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport './SortingVisualiser.css';\n\nexport default class SortingVisualiser extends React.Component {\n  componentShouldUpdate() {\n    return false;\n  }\n\n  render() {\n    return (\n      <section className=\"component-sorting-visualiser\">\n        {this.props.array.map((height, index) => (\n          <section\n            className=\"array-bar\"\n            key={index}\n            style={{height: `${height}px`}}>\n              <h1 className=\"bar-height\">{`${height}`}</h1>\n          </section>))}\n      </section>\n    );\n  }\n}\n","export default function generateArray() {\n  const PRIMARY_COLOUR = '#00000033';\n  const NUMBER_OF_ARRAY_BARS = 14;\n  const ARRAY_BAR_MIN_HEIGHT = window.screen.height / 12;\n  const ARRAY_BAR_MAX_HEIGHT = window.screen.height / 2;\n  const arrayBars = document.querySelectorAll('.array-bar');\n  const max = arrayBars.length;\n  for (let i = 0; i < max; i += 1) {\n    arrayBars[i].style.backgroundColor = PRIMARY_COLOUR;\n  }\n  const unsortedArray = [];\n  for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i += 1) {\n    unsortedArray.push(randomIntFromInterval(ARRAY_BAR_MIN_HEIGHT, ARRAY_BAR_MAX_HEIGHT));\n  }\n  return unsortedArray;\n}\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export default function getInsertionSortAnimations(unsortedArray) {\n  const animationsArray = [];\n  if (unsortedArray.length <= 1) return unsortedArray;\n  insertionSort(unsortedArray, animationsArray);\n  return animationsArray;\n}\n\nfunction insertionSort(unsortedArray, animationsArray) {\n  for (let i = 1; i < unsortedArray.length; i += 1) {\n    let j = i;\n    while (j > 0 && unsortedArray[j] < unsortedArray[j - 1]) {\n      swap(j, j - 1, unsortedArray);\n      animate(j - 1, j, unsortedArray, animationsArray);\n      j -= 1;\n    }\n    if (j > 0 && unsortedArray[j] >= unsortedArray[j - 1]) animate(j - 1, j, unsortedArray, animationsArray);\n  }\n}\n\nfunction swap(i, j, unsortedArray) {\n  let hold = unsortedArray[i];\n  unsortedArray[i] = unsortedArray[j];\n  unsortedArray[j] = hold;\n}\n\nfunction animate(i, j, unsortedArray, animationsArray) {\n  animationsArray.push([i, j]);\n  animationsArray.push([[i, unsortedArray[i]], [j, unsortedArray[j]]]);\n  animationsArray.push([i, j]);\n}\n","export default function getBubbleSortAnimations(unsortedArray) {\n  const animationsArray = [];\n  if (unsortedArray.length <= 1) return unsortedArray;\n  bubbleSort(unsortedArray, animationsArray);\n  return animationsArray;\n}\n\nfunction bubbleSort(unsortedArray, animationsArray) {\n  let isSorted = false;\n  let counter = 0;\n  while (!isSorted) {\n    isSorted = true;\n    for (let i = 0; i < unsortedArray.length - 1 - counter; i += 1) {\n      if (unsortedArray[i] > unsortedArray[i + 1]) {\n        swap(i, i + 1, unsortedArray);\n        animate(i, i + 1, unsortedArray, animationsArray);\n        isSorted = false;\n      } else {\n        animate(i, i + 1, unsortedArray, animationsArray);\n      }\n    }\n    counter += 1;\n  }\n}\n\nfunction swap(i, j, unsortedArray) {\n  let hold = unsortedArray[i];\n  unsortedArray[i] = unsortedArray[j];\n  unsortedArray[j] = hold;\n}\n\nfunction animate(i, j, unsortedArray, animationsArray) {\n  animationsArray.push([i, j]);\n  animationsArray.push([[i, unsortedArray[i]], [j, unsortedArray[j]]]);\n  animationsArray.push([i, j]);\n}\n","export default function getSelectionSortAnimations(unsortedArray) {\n  const animationsArray = [];\n  if (unsortedArray.length <= 1) return unsortedArray;\n  selectionSort(unsortedArray, animationsArray);\n  return animationsArray;\n}\n\nfunction selectionSort(unsortedArray, animationsArray) {\n  let currentIndex = 0;\n  while (currentIndex < unsortedArray.length - 1) {\n    let smallestIndex = currentIndex;\n    for (let i = currentIndex + 1; i < unsortedArray.length; i += 1) {\n      animateHighlight(smallestIndex, i, animationsArray);\n      if (unsortedArray[smallestIndex] > unsortedArray[i]) {\n        smallestIndex = i;\n      }\n    }\n    swap(currentIndex, smallestIndex, unsortedArray);\n    animateSwap(currentIndex, smallestIndex, unsortedArray, animationsArray);\n    currentIndex += 1;\n  }\n}\n\nfunction swap(i, j, unsortedArray) {\n  let hold = unsortedArray[i];\n  unsortedArray[i] = unsortedArray[j];\n  unsortedArray[j] = hold;\n}\n\nfunction animateHighlight(i, j, animationsArray) {\n  animationsArray.push([i, j]);\n  animationsArray.push([i, j]);\n}\n\nfunction animateSwap(i, j, unsortedArray, animationsArray) {\n  animationsArray.push([[i, unsortedArray[i]], [j, unsortedArray[j]]]);\n}\n","import React from 'react';\nimport InfoPopUp from './InfoPopUp';\nimport Heading from './Heading';\nimport AlgorithmPanel from './AlgorithmPanel';\nimport SpeedPanel from './SpeedPanel';\nimport SortButton from './SortButton';\nimport InfoButton from './InfoButton';\nimport SortingVisualiser from './SortingVisualiser';\nimport generateArray from '../logic/generateArray';\nimport runAnimations from '../logic/runAnimations';\nimport clearAnimations from '../logic/clearAnimations';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: [],\n      selectedAlgorithm: null,\n      animationsSpeed: 250,\n      animationsRunning: false,\n      infoPopUpHidden: true\n    };\n\n    this.generateArray = this.generateArray.bind(this);\n    this.handleInfoButton = this.handleInfoButton.bind(this);\n    this.handleClosePopUpButton = this.handleClosePopUpButton.bind(this);\n    this.handleAlgorithmButton = this.handleAlgorithmButton.bind(this);\n    this.handleRangeChange = this.handleRangeChange.bind(this);\n    this.handleSortButton = this.handleSortButton.bind(this);\n  }\n\n  componentWillMount() {\n    this.generateArray();\n    window.onload = () => document.body.classList.remove('preload');\n  }\n\n  generateArray() {\n    this.setState({ array: generateArray() });\n  }\n\n  handleInfoButton() {\n    this.setState({ infoPopUpHidden: false });\n  }\n\n  handleClosePopUpButton() {\n    this.setState({ infoPopUpHidden: true });\n  }\n\n  handleAlgorithmButton(algorithm) {\n    this.setState({ selectedAlgorithm: algorithm });\n  }\n\n  handleRangeChange(rangeValue) {\n    this.setState({ animationsSpeed: rangeValue });\n  }\n\n  handleSortButton() {\n    if (!this.state.animationsRunning && this.state.selectedAlgorithm !== null) {\n      this.setState({ animationsRunning: !this.state.animationsRunning }, () => {\n        runAnimations(this.state.selectedAlgorithm, this.state.array, this.state.animationsSpeed);\n      });\n    }\n    if (this.state.animationsRunning) {\n      this.setState({ animationsRunning: !this.state.animationsRunning }, () => {\n        clearAnimations(this.state.array.length, this.state.animationsSpeed);\n        this.setState({ array: generateArray() });\n      });\n    }\n  }\n\n  render() {\n    const classNameSidebar = ['sidebar', this.state.infoPopUpHidden ? '' : 'blur'];\n    const classNameVisualiser = ['visualiser', this.state.infoPopUpHidden ? '' : 'blur'];\n\n    return (\n      <section className=\"component-app\">\n        <InfoPopUp\n          infoPopUpHidden={this.state.infoPopUpHidden} \n          selectedAlgorithm={this.state.selectedAlgorithm}\n          onClosePopUpButtonClick={this.handleClosePopUpButton} />\n        <section className={classNameSidebar.join(' ').trim()}>\n          <Heading />\n          <section className=\"sidebar-bottom\">\n            <AlgorithmPanel \n              selectedAlgorithm={this.state.selectedAlgorithm}\n              animationsRunning={this.state.animationsRunning}\n              onAlgorithmButtonClick={this.handleAlgorithmButton} />\n            <SpeedPanel\n              animationsSpeed={this.state.animationsSpeed}\n              selectedAlgorithm={this.state.selectedAlgorithm}\n              animationsRunning={this.state.animationsRunning}\n              onRangeChange={this.handleRangeChange} />\n            <SortButton\n              selectedAlgorithm={this.state.selectedAlgorithm}\n              animationsRunning={this.state.animationsRunning}\n              onSortButtonClick={this.handleSortButton} />\n          </section>\n        </section>\n        <section className={classNameVisualiser.join(' ').trim()}>\n          <InfoButton \n            infoPopUpHidden={this.state.infoPopUpHidden}\n            animationsRunning={this.state.animationsRunning}\n            onInfoButtonClick={this.handleInfoButton} />\n          <SortingVisualiser \n            array={this.state.array} />\n        </section>\n      </section>\n    );\n  }\n}\n","import getInsertionSortAnimations from './insertionSort';\nimport getBubbleSortAnimations from './bubbleSort';\nimport getSelectionSortAnimations from './selectionSort';\n\nconst PRIMARY_COLOUR = '#00000033';\nconst SECONDARY_COLOUR = '#FFFFFF';\nconst FINISHED_COLOUR = '#FFFFFFB3';\n\nexport default function runAnimations(selectedAlgorithm, unsortedArray, animationsSpeed) {\n  const transitionSpeed = animationsSpeed / 1000;\n  let shouldColourSwap = true;\n  let animations = [];\n\n  if (selectedAlgorithm === 'insertion') animations = getInsertionSortAnimations(unsortedArray);\n  if (selectedAlgorithm === 'bubble') animations = getBubbleSortAnimations(unsortedArray);\n  if (selectedAlgorithm === 'selection') animations = getSelectionSortAnimations(unsortedArray);\n  \n  for (let i = 0; i < animations.length; i += 1) {\n    const arrayBars = document.querySelectorAll('.array-bar');\n    const barHeights = document.querySelectorAll('.bar-height');\n    const animateHighlight = typeof animations[i][0] === 'object' ? false : true;\n\n    if (animateHighlight) {\n      const [barOneIndex, barTwoIndex] = animations[i];\n      const barOneStyle = arrayBars[barOneIndex].style;\n      const barTwoStyle = arrayBars[barTwoIndex].style;\n      const colour = shouldColourSwap ? SECONDARY_COLOUR : PRIMARY_COLOUR;\n      setTimeout(() => {\n      barOneStyle.backgroundColor = colour;\n      barTwoStyle.backgroundColor = colour;\n      barOneStyle.transitionDuration = `${transitionSpeed}s`;\n      barTwoStyle.transitionDuration = `${transitionSpeed}s`;\n      }, i * animationsSpeed);\n      shouldColourSwap = !shouldColourSwap;\n    } else {\n      setTimeout(() => {\n        const [barOneIndex, barOneHeight] = animations[i][0];\n        const [barTwoIndex, barTwoHeight] = animations[i][1];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        const heightOneText = barHeights[barOneIndex];\n        const heightTwoText = barHeights[barTwoIndex];\n        barOneStyle.height = `${barOneHeight}px`;\n        barTwoStyle.height = `${barTwoHeight}px`;\n        heightOneText.textContent = `${barOneHeight}`;\n        heightTwoText.textContent = `${barTwoHeight}`;\n      }, i * animationsSpeed);\n    }\n  }\n  setTimeout(() => {\n    const arrayBars = document.querySelectorAll('.array-bar');\n    let max = arrayBars.length;\n    for (let i = 0; i < max; i += 1) {\n      arrayBars[i].style.transitionDuration = `${transitionSpeed}s`;\n      arrayBars[i].style.backgroundColor = FINISHED_COLOUR;\n    }\n  }, animations.length * animationsSpeed);\n}\n","export default function clearAnimations(arrayLength, animationsSpeed) {\n  let timeoutIDs = arrayLength * animationsSpeed;\n  while (timeoutIDs--) {\n    window.clearTimeout(timeoutIDs);\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}